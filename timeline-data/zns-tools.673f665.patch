diff --git a/lib/libzns-tools.c b/lib/libzns-tools.c
index b78f89c..f4c1de8 100644
--- a/lib/libzns-tools.c
+++ b/lib/libzns-tools.c
@@ -260,13 +260,19 @@ void print_zone_info(uint32_t zone) {
     }
 
     zone_mask = ~(ctrl.znsdev.zone_size - 1);
-    MSG("\n============ ZONE %d ============\n", zone);
-    MSG("LBAS: 0x%06llx  LBAE: 0x%06llx  CAP: 0x%06llx  WP: 0x%06llx  SIZE: "
-        "0x%06llx  STATE: %#-4x  MASK: 0x%06" PRIx32 "\n",
+   // MSG("\n============ ZONE %d ============\n", zone);
+  //  MSG("LBAS: 0x%06llx  LBAE: 0x%06llx  CAP: 0x%06llx  WP: 0x%06llx  SIZE: "
+   //     "0x%06llx  STATE: %#-4x  MASK: 0x%06" PRIx32 "\n",
+   //     hdr->zones[0].start, hdr->zones[0].start + hdr->zones[0].capacity,
+   //     hdr->zones[0].capacity, hdr->zones[0].wp, hdr->zones[0].len,
+   //     hdr->zones[0].cond << 4, zone_mask);
+  printf(",\"INFO\": {\"LBAS\": 0x%06llx,  \"LBAE\": 0x%06llx,  \"CAP\": 0x%06llx, \"WP\": 0x%06llx,  \"SIZE\": "
+        "0x%06llx, \"STATE\": %#-4x,  \"MASK\": 0x%06" PRIx32 "}",
         hdr->zones[0].start, hdr->zones[0].start + hdr->zones[0].capacity,
         hdr->zones[0].capacity, hdr->zones[0].wp, hdr->zones[0].len,
         hdr->zones[0].cond << 4, zone_mask);
 
+
     close(fd);
 
     free(hdr);
diff --git a/src/segmap.c b/src/segmap.c
index 1283019..4d4dac0 100644
--- a/src/segmap.c
+++ b/src/segmap.c
@@ -106,7 +106,12 @@ static void collect_extents(char *path) {
             fsync(ctrl.fd);
 
             if (ctrl.fd < 0) {
-                ERR_MSG("failed opening file %s\n", ctrl.filename);
+		if (access(ctrl.filename, F_OK) != 0) {
+			INFO(1, "File no longer exists: %s", ctrl.filename);
+			continue;
+		} else {
+                	ERR_MSG("failed opening file %s\n", ctrl.filename);
+		}
             }
 
             if (fstat(ctrl.fd, ctrl.stats) < 0) {
@@ -116,7 +121,7 @@ static void collect_extents(char *path) {
             temp_map = (struct extent_map *)get_extents();
 
             if (!temp_map || temp_map->ext_ctr == 0) {
-                INFO(1, "No extents found for file: %s\n", ctrl.filename);
+                //INFO(1, "No extents found for file: %s\n", ctrl.filename);
             } else {
                 glob_extent_map->ext_ctr += temp_map->ext_ctr;
                 glob_extent_map = realloc(
@@ -153,45 +158,28 @@ static void collect_extents(char *path) {
  *
  * */
 static void show_segment_flags(uint32_t segment_id, uint8_t is_range) {
-    REP(ctrl.show_only_stats, "+++++ TYPE: ");
+    printf(",{\"ZONE_TYPE\":");
     if (segman.sm_info[segment_id].type == CURSEG_HOT_DATA) {
-        REP(ctrl.show_only_stats, "CURSEG_HOT_DATA");
+        printf( "\"CURSEG_HOT_DATA\"");
     } else if (segman.sm_info[segment_id].type == CURSEG_WARM_DATA) {
-        REP(ctrl.show_only_stats, "CURSEG_WARM_DATA");
+        printf("\"CURSEG_WARM_DATA\"");
     } else if (segman.sm_info[segment_id].type == CURSEG_COLD_DATA) {
-        REP(ctrl.show_only_stats, "CURSEG_COLD_DATA");
+        printf("\"CURSEG_COLD_DATA\"");
     } else if (segman.sm_info[segment_id].type == CURSEG_HOT_NODE) {
-        REP(ctrl.show_only_stats, "CURSEG_HOT_NODE");
+        printf("\"CURSEG_HOT_NODE\"");
     } else if (segman.sm_info[segment_id].type == CURSEG_WARM_NODE) {
-        REP(ctrl.show_only_stats, "CURSEG_WARM_NODE");
+        printf("\"CURSEG_WARM_NODE\"");
     } else if (segman.sm_info[segment_id].type == CURSEG_COLD_NODE) {
-        REP(ctrl.show_only_stats, "CURSEG_COLD_NODE");
-    }
-
-    REP(ctrl.show_only_stats, "  VALID BLOCKS: %3u",
-        segman.sm_info[segment_id].valid_blocks << F2FS_BLKSIZE_BITS >>
-            ctrl.sector_shift);
-    if (is_range) {
-        REP(ctrl.show_only_stats, " per segment\n");
-    } else {
-        REP(ctrl.show_only_stats, "\n");
+        printf("\"CURSEG_COLD_NODE\"");
     }
+    printf("}");
 }
 
 static void show_segment_info(uint64_t segment_start) {
     if (ctrl.cur_segment != segment_start) {
-        REP_UNDERSCORE
-        REP_FORMATTER
-        REP(ctrl.show_only_stats,
-            "SEGMENT: %-4lu  PBAS: %#-10" PRIx64 "  PBAE: %#-10" PRIx64
-            "  SIZE: %#-10" PRIx64 "\n",
-            segment_start, segment_start << ctrl.segment_shift,
-            ((segment_start << ctrl.segment_shift) + ctrl.f2fs_segment_sectors),
-            ctrl.f2fs_segment_sectors);
         if (ctrl.procfs) {
             show_segment_flags(segment_start, 0);
         }
-        REP_FORMATTER
         ctrl.cur_segment = segment_start;
     }
 }
@@ -212,13 +200,22 @@ static void show_beginning_segment(uint64_t i) {
         (glob_extent_map->extent[i].phy_blk & ctrl.f2fs_segment_mask);
     uint64_t segment_end = segment_start + (ctrl.f2fs_segment_sectors);
 
-    REP(ctrl.show_only_stats,
-        "***** EXTENT:  PBAS: %#-10" PRIx64 "  PBAE: %#-10" PRIx64
-        "  SIZE: %#-10" PRIx64 "  FILE: %50s  EXTID:  %d/%-5d\n",
+    printf(
+        ", {\"type:\":\"EXTENT\",\"PBAS\":\"%#-10" PRIx64 "\",\"PBAE\":\"%#-10" PRIx64
+        "\",\"SIZE\":\"%#-10" PRIx64 "\",\"FILE_NAME\":\"%50s\",\"EXTID\":\"%d/%-5d\"}",
         glob_extent_map->extent[i].phy_blk, segment_end,
         segment_end - glob_extent_map->extent[i].phy_blk,
         glob_extent_map->extent[i].file, glob_extent_map->extent[i].ext_nr + 1,
         get_file_counter(glob_extent_map->extent[i].file));
+
+
+   // REP(ctrl.show_only_stats,
+   //     "***** EXTENT:  PBAS: %#-10" PRIx64 "  PBAE: %#-10" PRIx64
+   //     "  SIZE: %#-10" PRIx64 "  FILE: %50s  EXTID:  %d/%-5d\n",
+   //     glob_extent_map->extent[i].phy_blk, segment_end,
+   //     segment_end - glob_extent_map->extent[i].phy_blk,
+   //     glob_extent_map->extent[i].file, glob_extent_map->extent[i].ext_nr + 1,
+   //     get_file_counter(glob_extent_map->extent[i].file));
 }
 
 /*
@@ -328,24 +325,15 @@ static void show_consecutive_segments(uint64_t i, uint64_t segment_start) {
         // in the next segment then we just want to show the 1st segment (2nd
         // segment will be printed in the function after this)
         show_segment_info(segment_start);
-        REP(ctrl.show_only_stats,
-            "***** EXTENT:  PBAS: %#-10" PRIx64 "  PBAE: %#-10" PRIx64
-            "  SIZE: %#-10" PRIx64 "  FILE: %50s  EXTID:  %d/%-5d\n",
+        printf(
+            ",{\"Type\":\"EXTENT\",\"PBAS\":\"%#-10" PRIx64 "\",\"PBAE\":\"%#-10" PRIx64
+            "\",\"SIZE\":\"%#-10" PRIx64 "\",\"FILE_NAME\":\"%50s\",\"EXTID\":\"%d/%-5d\"}",
             segment_start, segment_end << ctrl.segment_shift,
             (unsigned long)ctrl.f2fs_segment_sectors,
             glob_extent_map->extent[i].file,
             glob_extent_map->extent[i].ext_nr + 1,
             get_file_counter(glob_extent_map->extent[i].file));
     } else {
-        REP_UNDERSCORE
-        REP_FORMATTER
-        REP(ctrl.show_only_stats,
-            ">>>>> SEGMENT RANGE: %-4lu-%-4lu   PBAS: %#-10" PRIx64
-            "  PBAE: %#-10" PRIx64 "  SIZE: %#-10" PRIx64 "\n",
-            segment_start, segment_end - 1, segment_start << ctrl.segment_shift,
-            segment_end << ctrl.segment_shift,
-            num_segments * ctrl.f2fs_segment_sectors);
-
         // Since segments are in the same zone, they must be of the same type
         // therefore, we can just print the flags of the first one, and since
         // they are contiguous ranges, they cannot have invalid blocks, for
@@ -355,10 +343,9 @@ static void show_consecutive_segments(uint64_t i, uint64_t segment_start) {
             show_segment_flags(segment_start, 1);
         }
 
-        REP_FORMATTER
-        REP(ctrl.show_only_stats,
-            "***** EXTENT:  PBAS: %#-10" PRIx64 "  PBAE: %#-10" PRIx64
-            "  SIZE: %#-10" PRIx64 "  FILE: %50s  EXTID:  %d/%-5d\n",
+        printf(
+            ",{\"Type\":\"EXTENT\",\"PBAS\":\"%#-10" PRIx64 "\",\"PBAE\":\"%#-10" PRIx64
+            "\",\"SIZE\":\"%#-10" PRIx64 "\",\"FILE_NAME\":\"%50s\",\"EXTID\":\"%d/%-5d\"}",
             segment_start << ctrl.segment_shift,
             segment_end << ctrl.segment_shift,
             num_segments * ctrl.f2fs_segment_sectors,
@@ -383,9 +370,9 @@ static void show_remainder_segment(uint64_t i) {
                          (segment_start << ctrl.segment_shift);
 
     show_segment_info(segment_start);
-    REP(ctrl.show_only_stats,
-        "***** EXTENT:  PBAS: %#-10" PRIx64 "  PBAE: %#-10" PRIx64
-        "  SIZE: %#-10" PRIx64 "  FILE: %50s  EXTID:  %d/%-5d\n",
+    printf(
+        ",{\"Type\":\"EXTENT\",\"PBAS\":\"%#-10" PRIx64 "\",\"PBAE\":\"%#-10" PRIx64
+        "\",\"SIZE\":\"%#-10" PRIx64 "\",\"FILE_NAME\":\"%50s\",\"EXTID\":\"%d/%-5d\"}",
         segment_start << ctrl.segment_shift,
         (segment_start << ctrl.segment_shift) + remainder, remainder,
         glob_extent_map->extent[i].file, glob_extent_map->extent[i].ext_nr + 1,
@@ -397,10 +384,7 @@ static void show_remainder_segment(uint64_t i) {
  *
  * */
 static void show_segment_stats() {
-    REP(ctrl.show_only_stats, "\n\n");
-    EQUAL_FORMATTER
     MSG("\t\t\tSEGMENT STATS");
-    EQUAL_FORMATTER
 
     if (!(ctrl.exclude_flags & FIEMAP_EXTENT_DATA_INLINE)) {
         WARN("Segment Heat Classification statistics exclude inode inlined "
@@ -461,9 +445,7 @@ static void show_segment_report() {
         segmap_man.fs = calloc(sizeof(struct file_stats) * ctrl.nr_files, 1);
     }
 
-    REP_EQUAL_FORMATTER
-    REP(ctrl.show_only_stats, "\t\t\tSEGMENT MAPPINGS\n");
-    REP_EQUAL_FORMATTER
+    printf("{\"zone_file_mappings\":[{\n\"zone\":0, \"files\":[\n");
 
     for (uint64_t i = 0; i < glob_extent_map->ext_ctr; i++) {
         segment_id =
@@ -479,13 +461,11 @@ static void show_segment_report() {
 
         if (current_zone != glob_extent_map->extent[i].zone) {
             if (current_zone != 0) {
-                REP_FORMATTER
             }
+	    printf("\n]},");
             current_zone = glob_extent_map->extent[i].zone;
+	    printf("{\"zone\":%u, \"files\":[\n", current_zone);
             glob_extent_map->zone_ctr++;
-            if (!ctrl.show_only_stats) {
-                print_zone_info(current_zone);
-            }
         }
 
         uint64_t segment_start =
@@ -524,15 +504,19 @@ static void show_segment_report() {
                 }
             }
 
-            REP(ctrl.show_only_stats,
-                "***** EXTENT:  PBAS: %#-10" PRIx64 "  PBAE: %#-10" PRIx64
-                "  SIZE: %#-10" PRIx64 "  FILE: %50s  EXTID:  %d/%-5d\n",
+           printf(",");
+           printf(
+                "{\"Type\":\"EXTENT\",\"PBAS\":\"%#-10" PRIx64 "\",\"PBAE\":\"%#-10" PRIx64
+                "\",\"SIZE\":\"%#-10" PRIx64 "\",\"FILE_NAME\":\"%50s\",\"EXTID\":\"%d/%-5d\"\n}",
                 glob_extent_map->extent[i].phy_blk,
                 glob_extent_map->extent[i].phy_blk +
                     glob_extent_map->extent[i].len,
                 glob_extent_map->extent[i].len, glob_extent_map->extent[i].file,
                 glob_extent_map->extent[i].ext_nr + 1,
                 get_file_counter(glob_extent_map->extent[i].file));
+
+
+
         } else {
             // Else the extent spans across multiple segments, so we need to
             // break it up
@@ -580,6 +564,7 @@ static void show_segment_report() {
     if (ctrl.show_class_stats) {
         show_segment_stats();
     }
+    printf("]}]}\n");
 }
 
 int main(int argc, char *argv[]) {
